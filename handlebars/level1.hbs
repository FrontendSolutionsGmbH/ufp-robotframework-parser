<html >

    <header >
        <link rel="stylesheet"
              href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"
              integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"
              crossorigin="anonymous" >

        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
                integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
                crossorigin="anonymous" ></script >
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"
                integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"
                crossorigin="anonymous" ></script >
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"
                integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"
                crossorigin="anonymous" ></script >
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js" ></script >
    </header >

    <script >
        // provide global chart namespace
        var ufpTestReport = {
            charts: []
        }

    </script >

    <body >


        {{#*inline "renderExecutions"}}

            <div class="collapse navbar-collapse" >
                {{this.path}}
            </div >

        {{/inline}}

        {{#*inline "renderChartForTestSuite"}}

            <div class="chart-container"
                 style="position: relative; " >
                <canvas id="myChart{{this.path}}" ></canvas >

                <script >
                    console.log('Rendering Chart myChart{{this.path}}',)
                    console.log('Rendering Chart myChart{{this.path}}', document.getElementById("myChart{{this.path}}"))

                    var ctx = document.getElementById("myChart{{this.path}}").getContext('2d');
                    ufpTestReport.charts.push(new Chart(ctx, {
                        type: 'bar',
                        responsive: true,
                        data: {
                            labels: [
                                {{#each this.executions}}
                                    '{{formatRelative this.date}}',
                                {{/each}}



                            ],
                            datasets: [{
                                backgroundColor: '#007bff',
                                label: 'Duration (seconds)',
                                data: [
                                    {{#each this.executions}}
                                        {{this.duration}},
                                    {{/each}}
                                ],

                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }],
                                xAxes: [{
                                    display: false,
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    }));


                </script >
            </div >


        {{/inline}}

        {{#*inline "renderChartForTestSuiteSuccessFail"}}

            <div class="chart-container"
                 style="position: relative;  " >
                <canvas id="myChart{{this.path}}-successfail" ></canvas >
                <script >
                    console.log('Rendering Chart myChart{{this.path}}',)
                    console.log('Rendering Chart myChart{{this.path}}', document.getElementById("myChart{{this.path}}-successfail"))

                    var ctx = document.getElementById("myChart{{this.path}}-successfail").getContext('2d');
                    ufpTestReport.charts.push(new Chart(ctx, {
                        type: 'bar',

                        data: {

                            labels: [
                                {{#each this.executions}}
                                    '{{formatRelative this.date}}',
                                {{/each}}




                            ],
                            datasets: [{
                                backgroundColor: '#dc3545',
                                label: 'Failed Tests ',
                                data: [
                                    {{#each this.executions}}
                                        {{this.failures}},
                                    {{/each}}
                                ],

                                borderWidth: 1
                            }, {
                                backgroundColor: '#28a745',
                                label: 'Successful Tests  ',
                                data: [
                                    {{#each this.executions}}
                                        {{this.tests}}- {{this.failures}},
                                    {{/each}}
                                ],

                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    stacked: true,
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }],
                                xAxes: [{
                                    display: false,
                                    stacked: true,
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    }));


                </script >


            </div >

        {{/inline}}




        <div class="container" >
            {{#each data}}
                <div class="row bg-primary text-light" >

                    <div class="col-6" >
                        <h1 >Stage {{@key}}</h1 >
                    </div >
                </div >


                {{#each this.suites}}
                    <div class="row bg-info text-light" >
                        <div class="col-12" >
                            <h2 >Test {{@key}} {{formatNumber this.averageDuration}}s Average Duration (in seconds)</h2 >


                        </div >
                    </div >
                <div >
                    <div class="row" >
                        <div class="col-6" >

                            {{>renderChartForTestSuite}}

                        </div >
                        <div class="col-6" >

                            {{>renderChartForTestSuiteSuccessFail}}

                        </div >
                    </div >




                {{/each}}

            {{/each}}

        </div >
    </body >
</html >
